<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Calculator.php" path="/">
    <totals>
      <lines total="29" comments="0" code="29" executable="6" executed="5" percent="83.33"/>
      <methods count="5" tested="4" percent="80.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Calculator" start="4" executable="6" executed="5" crap="5.12">
      <namespace name="App"/>
      <method name="__construct" signature="__construct($operator)" start="7" end="9" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="evaluate" signature="evaluate($num1, $num2)" start="11" end="14" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="add" signature="add($num1, $num2)" start="16" end="18" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="subtract" signature="subtract($num1, $num2)" start="20" end="22" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="multiply" signature="multiply($num1, $num2)" start="25" end="27" crap="2" executable="1" executed="0" coverage="0"/>
    </class>
    <coverage>
      <line nr="8">
        <covered by="CalculatorTest::testSubtractOperation"/>
        <covered by="CalculatorTest::testAddOperation"/>
      </line>
      <line nr="12">
        <covered by="CalculatorTest::testSubtractOperation"/>
        <covered by="CalculatorTest::testAddOperation"/>
      </line>
      <line nr="13">
        <covered by="CalculatorTest::testSubtractOperation"/>
        <covered by="CalculatorTest::testAddOperation"/>
      </line>
      <line nr="17">
        <covered by="CalculatorTest::testAddOperation"/>
      </line>
      <line nr="21">
        <covered by="CalculatorTest::testSubtractOperation"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="3"/>
      <line no="4">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Calculator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="5">
        <token name="T_WHITESPACE">  </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$operator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_WHITESPACE">  </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$operator</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="8">
        <token name="T_WHITESPACE">    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">operator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$operator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">  </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_WHITESPACE">  </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">evaluate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$num1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_VARIABLE">$func</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">operator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_VARIABLE">$func</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$num1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">  </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_WHITESPACE">  </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">add</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$num1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num2</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">  </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">  </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">subtract</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$num1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num2</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">  </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="23"/>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">  </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">multiply</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$num1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$num2</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">  </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29"/>
    </source>
  </file>
</phpunit>
